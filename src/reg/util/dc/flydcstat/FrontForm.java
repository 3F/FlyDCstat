/*
    * Copyright (C) 2013 Developed by reg <entry.reg@gmail.com>
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
 */

package reg.util.dc.flydcstat;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.InputStream;
import java.util.ResourceBundle;
import java.util.jar.Attributes;
import java.util.jar.Manifest;
import javax.swing.JOptionPane;

public class FrontForm extends javax.swing.JFrame
{
    public FrontForm()
    {
        setLookAndFeel();
        initComponents();
        tblInfo.setComponentPopupMenu(jPopupMenu);
        this.setLocationRelativeTo(null); //to center screen
    }
    
    /**
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * details: http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    private void setLookAndFeel()
    {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch(Exception e){}
    }
    
    /**
     * Set handler for component jMenuDownloadHub
     * @param l 
     */
    protected void listnerDownloadHub(ActionListener l)
    {
        jMenuDownloadHub.addActionListener(l);
    }
    
    /**
     * Set handler for component jMenuDownloadNick
     * @param l 
     */    
    protected void listnerDownloadNick(ActionListener l)
    {
        jMenuDownloadNick.addActionListener(l);
    }
    
    /**
     * Set handler for component jMenuUploadHub
     * @param l 
     */    
    protected void listnerUploadHub(ActionListener l)
    {
        jMenuUploadHub.addActionListener(l);
    }
    
    /**
     * Set handler for component jMenuUploadNick
     * @param l 
     */    
    protected void listnerUploadNick(ActionListener l)
    {
        jMenuUploadNick.addActionListener(l);
    }
    
    /**
     * Set handler for component jMenuDhtDownload
     * @param l 
     */    
    protected void listnerDhtDownload(ActionListener l)
    {
        jMenuDhtDownload.addActionListener(l);
    }
    
    /**
     * Set handler for component jMenuDhtUpload
     * @param l 
     */    
    protected void listnerDhtUpload(ActionListener l)
    {
        jMenuDhtUpload.addActionListener(l);
    }
    
    /**
     * Set handler for component jMenuUploadNick
     * @param l 
     */    
    protected void listnerRatingAll(ActionListener l)
    {
        jMenuRatingAll.addActionListener(l);
    }
    
    /**
     * label of path DB
     * @param path
     * @param toolTip 
     */
    protected void setLabelDbPath(String path, String toolTip)
    {
        jMenuLabelPath.setText("| " + path);
        jMenuLabelPath.setToolTipText(toolTip + " " + path);
    }
    
    /**
     * rendering of internationalization
     * @param uimsg 
     */
    public void i18n(ResourceBundle uimsg)
    {
        jMenuSelectType.setText(uimsg.getString("menu_type"));
        jMenuSettings.setText(uimsg.getString("menu_settings"));
        jMenuDownloadHub.setText(uimsg.getString("menu_download_hub"));
        jMenuUploadHub.setText(uimsg.getString("menu_upload_hub"));
        jMenuDownloadNick.setText(uimsg.getString("menu_download_nick"));
        jMenuUploadNick.setText(uimsg.getString("menu_upload_nick"));
        jMenuDhtDownload.setText(uimsg.getString("menu_dht_download"));
        jMenuDhtUpload.setText(uimsg.getString("menu_dht_upload"));
        jMenuRatingAll.setText(uimsg.getString("menu_total_rating"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jDialog1 = new javax.swing.JDialog();
        jPopupMenu = new javax.swing.JPopupMenu();
        jMenuItemSelectAll = new javax.swing.JMenuItem();
        jMenuItemCopy = new javax.swing.JMenuItem();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInfo = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuSelectType = new javax.swing.JMenu();
        jMenuDownloadHub = new javax.swing.JMenuItem();
        jMenuDownloadNick = new javax.swing.JMenuItem();
        jMenuUploadHub = new javax.swing.JMenuItem();
        jMenuUploadNick = new javax.swing.JMenuItem();
        jMenuDhtDownload = new javax.swing.JMenuItem();
        jMenuDhtUpload = new javax.swing.JMenuItem();
        jMenuRatingAll = new javax.swing.JMenuItem();
        jMenuAnalysis = new javax.swing.JMenu();
        jMenuItemCompire = new javax.swing.JMenuItem();
        jMenuItemDynamics = new javax.swing.JMenuItem();
        jMenuSettings = new javax.swing.JMenu();
        jMenuItemMainSettings = new javax.swing.JMenuItem();
        jMenuInfo = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();
        jMenuLabelPath = new javax.swing.JMenu();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jMenuItemSelectAll.setText("Выделить все");
        jMenuItemSelectAll.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItemSelectAllActionPerformed(evt);
            }
        });
        jPopupMenu.add(jMenuItemSelectAll);

        jMenuItemCopy.setText("Копировать");
        jMenuItemCopy.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItemCopyActionPerformed(evt);
            }
        });
        jPopupMenu.add(jMenuItemCopy);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {},
                {},
                {},
                {}
            },
            new String []
            {

            }
        ));
        jScrollPane2.setViewportView(tblInfo);

        jMenuSelectType.setText("Выбрать тип");

        jMenuDownloadHub.setText("Скачиваний по хабам");
        jMenuSelectType.add(jMenuDownloadHub);

        jMenuDownloadNick.setText("Скачиваний по никам");
        jMenuSelectType.add(jMenuDownloadNick);

        jMenuUploadHub.setText("Отдача по хабам");
        jMenuSelectType.add(jMenuUploadHub);

        jMenuUploadNick.setText("Отдача по никам");
        jMenuSelectType.add(jMenuUploadNick);

        jMenuDhtDownload.setText("DHT Скачиваний");
        jMenuSelectType.add(jMenuDhtDownload);

        jMenuDhtUpload.setText("DHT Отдачи");
        jMenuSelectType.add(jMenuDhtUpload);

        jMenuRatingAll.setText("Общий рейтинг");
        jMenuSelectType.add(jMenuRatingAll);

        jMenuBar1.add(jMenuSelectType);

        jMenuAnalysis.setText("Анализ данных");

        jMenuItemCompire.setText("Эффективность");
        jMenuAnalysis.add(jMenuItemCompire);

        jMenuItemDynamics.setText("Динамика");
        jMenuAnalysis.add(jMenuItemDynamics);

        jMenuBar1.add(jMenuAnalysis);

        jMenuSettings.setText("Сервис");

        jMenuItemMainSettings.setText("Параметры");
        jMenuSettings.add(jMenuItemMainSettings);

        jMenuBar1.add(jMenuSettings);

        jMenuInfo.setText("Информация");

        jMenuItemAbout.setText("?");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuInfo.add(jMenuItemAbout);

        jMenuBar1.add(jMenuInfo);

        jMenuLabelPath.setText("/");
        jMenuLabelPath.setToolTipText("Текущий путь к папке FlylinkDC++");
        jMenuLabelPath.setDelay(0);
        jMenuLabelPath.setEnabled(false);
        jMenuBar1.add(jMenuLabelPath);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItemAboutActionPerformed
    {//GEN-HEADEREND:event_jMenuItemAboutActionPerformed
        String version = "";
        try{
            InputStream stream      = getClass().getResourceAsStream("/META-INF/MANIFEST.MF");
            Manifest manifest       = new Manifest(stream);
            Attributes attributes   = manifest.getMainAttributes();
            String specVersion      = attributes.getValue("Specification-Version");
            if(specVersion != null){
                version = String.format("v%s-%s", specVersion, attributes.getValue("Implementation-Version"));
            }
        }
        catch(Exception e){}
        JOptionPane.showMessageDialog(null, 
                        "entry.reg@gmail.com\nsee detail on:\nhttps://bitbucket.org/3F\n" + 
                        "\nThis product includes SQLiteJDBC (xerial.org)",
                        version,
                        JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void jMenuItemSelectAllActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItemSelectAllActionPerformed
    {//GEN-HEADEREND:event_jMenuItemSelectAllActionPerformed
        tblInfo.selectAll();
    }//GEN-LAST:event_jMenuItemSelectAllActionPerformed

    private void jMenuItemCopyActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItemCopyActionPerformed
    {//GEN-HEADEREND:event_jMenuItemCopyActionPerformed
        ActionEvent evtGen = new ActionEvent(tblInfo, ActionEvent.ACTION_PERFORMED, "copy");
        tblInfo.getActionMap().get(evtGen.getActionCommand()).actionPerformed(evtGen);
    }//GEN-LAST:event_jMenuItemCopyActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog jDialog1;
    private javax.swing.JMenu jMenuAnalysis;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuDhtDownload;
    private javax.swing.JMenuItem jMenuDhtUpload;
    private javax.swing.JMenuItem jMenuDownloadHub;
    private javax.swing.JMenuItem jMenuDownloadNick;
    private javax.swing.JMenu jMenuInfo;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemCompire;
    private javax.swing.JMenuItem jMenuItemCopy;
    private javax.swing.JMenuItem jMenuItemDynamics;
    private javax.swing.JMenuItem jMenuItemMainSettings;
    private javax.swing.JMenuItem jMenuItemSelectAll;
    private javax.swing.JMenu jMenuLabelPath;
    private javax.swing.JMenuItem jMenuRatingAll;
    private javax.swing.JMenu jMenuSelectType;
    private javax.swing.JMenu jMenuSettings;
    private javax.swing.JMenuItem jMenuUploadHub;
    private javax.swing.JMenuItem jMenuUploadNick;
    private javax.swing.JPopupMenu jPopupMenu;
    private javax.swing.JScrollPane jScrollPane2;
    protected javax.swing.JTable tblInfo;
    // End of variables declaration//GEN-END:variables
}
